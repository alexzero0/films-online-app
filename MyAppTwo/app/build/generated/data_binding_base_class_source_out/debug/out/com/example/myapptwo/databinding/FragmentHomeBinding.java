// Generated by view binder compiler. Do not edit!
package com.example.myapptwo.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.swiperefreshlayout.widget.SwipeRefreshLayout;
import androidx.viewbinding.ViewBinding;
import com.example.myapptwo.R;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentHomeBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final FloatingActionButton fab1;

  @NonNull
  public final ConstraintLayout mainFilm;

  @NonNull
  public final RecyclerView myrecycle;

  @NonNull
  public final SwipeRefreshLayout swipeToRefresh;

  private FragmentHomeBinding(@NonNull ConstraintLayout rootView,
      @NonNull FloatingActionButton fab1, @NonNull ConstraintLayout mainFilm,
      @NonNull RecyclerView myrecycle, @NonNull SwipeRefreshLayout swipeToRefresh) {
    this.rootView = rootView;
    this.fab1 = fab1;
    this.mainFilm = mainFilm;
    this.myrecycle = myrecycle;
    this.swipeToRefresh = swipeToRefresh;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentHomeBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_home, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentHomeBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fab1;
      FloatingActionButton fab1 = rootView.findViewById(id);
      if (fab1 == null) {
        break missingId;
      }

      ConstraintLayout mainFilm = (ConstraintLayout) rootView;

      id = R.id.myrecycle;
      RecyclerView myrecycle = rootView.findViewById(id);
      if (myrecycle == null) {
        break missingId;
      }

      id = R.id.swipeToRefresh;
      SwipeRefreshLayout swipeToRefresh = rootView.findViewById(id);
      if (swipeToRefresh == null) {
        break missingId;
      }

      return new FragmentHomeBinding((ConstraintLayout) rootView, fab1, mainFilm, myrecycle,
          swipeToRefresh);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
